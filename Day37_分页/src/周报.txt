图书商城项目总结:
项目功能总结:
前台:
1用户模块:
注册/激活/登录/退出/
2分类模块:
查看所有分类/
3.图书模块:
查询所有图书/按分类查询图书/查询图书详细(根据参数bid查询)/
4.购物车模块:
添加购物车条目/清空所有条目/删除指定条目/我的购物车(根据参数uid查询购物车)/
5.订单模块:
生成订单/我的订单(根据参数uid查询订单)/查询订单(根据参数oid查询订单)/确认收货/
后台:
1管理员模块:
登录/
2.分类模块:
添加分类/查看所有分类/删除分类/查询分类(根据参数cid查询)/修改分类/
3.图书模块:
查看所有图书/查询图书详情(根据参数bid查询)/删除图书/修改图书/添加图书(上传图书封面)
4.订单模块:
查询所有订单/查询订单详情(根据参数state查询)/发货/
项目框架搭建:
jar包的分类导入:
数据库:
mysql驱动/c3p0(jar包和配置文件)/dbutils
commons-beanutils/commons-logging/
java邮件:
mail.jar/activation.jar
文件的上传:
commons-fileupload.commons-io
ajax:
json-lib
项目流程总结:
一.  用户模块:
创建用户数据库表格/
创建项目工程下用户package>user/
user包下创建domain/
domain中创建用户数据库实体类User/
User中添加用户数据库字段为私有属性,并配置get/set方法,编写无参/有参构造方法,复写toString方法
user包下创建dao/
dao下创建用户数据库操作类UserDao/
UserDao中私有化QueryRunner对象,并根据用户操作需要创建三个返回值为User实例化对象,参数为用户数据的query方法/
创建添加User对象至数据库的方法/
创建修改用户信息的update方法/
创建根据管理员账号找到用户对于数据的query方法/
user包下创建service/
service下创建后端操作类UserService/
UserService中私有化UserDao对象/
根据前端需要创建checkFormat方法检测前端传输的用户数据是否遵循规定格式/
创建register方法,将前端传输的用户数据作为参数,检测账户是否已存在数据库中,再判断是否将用户数据插入到数据库中/
创建active方法,在用户注册成功后,需要激活时判断账户激活状态,并修改账户激活状态/
创建login方法,将前端传输的用户数据作为参数,判断账户是否存在,并给予用户登录项目前端的权限/
创建checkState方法,检查用户激活状态,判断用户是否为未激活账号或者为激活账号或者为管理员账号/
service下创建exception/
exception下创建用户操作过程中的异常行为提示的自定义异常类/
user包下创建web/
web下创建UserServlet类,即为后端应用项目/
UserServlet中私有化UserService对象/
该类继承BaseServlet,根据前端功能需要创建四个返回值为String的方法,在用户前端操作时,由浏览器发起请求时提供的数据作相应操作,并在一系列判断处理后,给予前端响应/
模块总结:
用户模块中除了web包下的后端应用可以被用户发起请求访问以外,其他包中的类和数据不可被用户擅自调用修改,实体化对象层和数据库层应独立存在,并和service功能工具调用层分开/
调用数据库操作时,应处理好c3p0连接池的连接数量和连接时间,并在适当的时候给予连接关闭和处理,有必要时,可以调用事务处理,具体实现方法遵从JDBCUtils工具类中的方法实现调用/
用户操作或处理异常时,应在service层抛出异常信息,以用于后端servlet处理层能够及时并准确捕获当详细错误异常信息并响应给前端,在方法的调用和实现中,如果具有重复代码和重读调用的现象/
可以考虑将重复代码和重复调用出封装成方法,并设置需要的返回值类型和参数列表/
用户模块的编写和操作没有过多难点,可以考虑编写代码的同时,实现后台数据库的操作更快更方便,并优化代码,达到java六大基本原则的核心要求/
二.  图书模块:
大致操作流程同用户模块,创建图书数据库表格/
创建项目工程下图书package>book/
book包下创建domain/
domain中创建图书数据库实体类Book/
Book中添加图书数据库字段为私有属性,并配置get/set方法,配置无参/有参构造方法,复写toString方法/
同用户模块,book包下创建dao/
dao下创建图书数据库操作类BookDao
创建service/
service下创建后端操作类BookService/
创建web包/
web包下创建BookServlet类,即为后端应用项目/
