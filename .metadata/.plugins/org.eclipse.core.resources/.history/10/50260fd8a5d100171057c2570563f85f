import java.util.Scanner;

import javax.security.auth.kerberos.KerberosKey;

public class Rhombus {
	public static void main(String[] args) {
		// 1.打印所有的水仙花数
		System.out.println("三位数所有水仙花数:");
		for (int i = 1; i < 10; i++) {
			int hundredsDigit = i*i*i;
			for (int j = 0; j < 10; j++) {
				int tensDigit = j*j*j;
				for (int j2 = 0; j2 < 10; j2++) {
					int unitsDigit = j2*j2*j2;
					if ((hundredsDigit+tensDigit+unitsDigit) == i*100+j*10+j2) {
						System.out.println(i+""+j+""+j2);
					}
				}
			}
		}
		
		
		// 2.求数组中元素的:最大值,最小值,平均值及元素之和
		// 创建一个数组并赋予它数组长度
		Scanner scanner = new Scanner(System.in);
		System.out.println("输入并定义数组长度");
		int input = 5;
//				scanner.nextInt();
		int[] array = new int[input];
		// 在数组内创建所有的元素
		for (int i = 0; i < array.length; i++) {
			System.out.println("输入第"+(i+1)+"位数组元素");
			array[i] = i;
//					scanner.nextInt();
		}
		// 求最大值
		int max = array[0];
		for (int i = 1; i < array.length; i++) {
			if (array[i] > max) {
				max = array[i];
			}
		}System.out.println("数组最大值为:"+max);
		// 求最小值
		int min = array[0];
		for (int i = 0; i < array.length; i++) {
			if (array[i] < min) {
				min = array[i];
			}
		}System.out.println("数组最小值为:"+min);
		
		// 求元素之和
		int num = 0 ;
		for (int i = 0; i < array.length; i++) {
			num += array[i];
		}System.out.println("数组元素之和为:"+num);
		
		// 求平均数
		System.out.println("数组元素的平均数为:"+num/input);
		
		
		// 3.用for循环的嵌套打印菱形
		System.out.println("请输入菱形组成关键数:");
		int plies = 5;
//				scanner.nextInt();
		for (int i = 0; i < plies; i++) {
			for (int k = i; k < plies+1; k++) {
				System.out.print(" ");
			}
			for (int j = 0; j < i+1; j++) {
				System.out.print("*");
			}
			for (int l = 0; l < i; l++) {
				System.out.print("*");
			}System.out.println();
		}
		for (int n = 0; n < plies+1; n++) {
			for (int o = 0; o < n+1; o++) {
				System.out.print(" ");
			}
			for (int p = n; p < plies+1; p++) {
				System.out.print("*");
			}
			for (int q = n; q < plies; q++) {
				System.out.print("*");
			}System.out.println();
		}
		
		// 4.在main方法中定义三个变量:账号，密码，用户昵称
		// 先注册为帐号密码用户昵称建立有一个存储的位置
		
//		System.out.println("欢迎来到注册登录页面");
//		System.out.println("请输入需要注册的次数");
//		int time = scanner.nextInt();
//		int[] id = new int[time];
//		int[] password = new int[time];
//		String[] name = new String[time];
//		int i = 0;
//		while(i<time+1) {
//			System.out.println("1.注册/2.登录");
//			int user = scanner.nextInt();	
//		switch (user) {
//		case 1:
//			System.out.println("欢迎进入注册页面");
//			System.out.println("请输入账号:");
//			id[i] = scanner.nextInt();
//			System.out.println("请输入密码:");
//			password[i] = scanner.nextInt();
//			System.out.println("请输入昵称");
//			scanner.nextLine();
//			name[i] = scanner.nextLine();
//			break;
//		case 2:
//			System.out.println("欢迎进入登录页面");
//			System.out.println("请输入账号:");
//			int idCheck = scanner.nextInt();
//			if (idCheck != id[i]) {
//				System.out.println("该账号不存在");
//				break;
//			}
//			System.out.println("请输入密码:");
//			int passwordCheck = scanner.nextInt();
//			if (passwordCheck != password[i]) {
//				System.out.println("密码输入错误");
//				break;
//			}else {
//				System.out.println("欢迎"+name[i]+"登录系统");
//			}
//			i++;
//			break;
//		default:
//			break;
//		
//		}
//		}
		
		
		// 5.打印自定义边长的正方形及其对角线
		System.out.println("请输入正方形的边长:");
		int length = 11;
//				scanner.nextInt();
		for (int i = 0; i < length; i++) {
			for (int j = 0; j < length; j++) {
				if (i>0&&j>0&&i<length-1&&j<length-1) {
					System.out.print(" ");
					if (i==j) {
						System.out.println("*");
					}
				}else {
				System.out.print("*");
				}
			}
			System.out.println();
		}
		
	}
}
